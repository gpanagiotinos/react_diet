# Queries and Types
type UserType {
    user_id: ID!
    username: String!
    createdAt: Date!
    updatedAt: Date!
}
# USDA Data Search Types
type USDAData {
    list: USDADataList
}
type USDADataList {
    q: String!
    sr: String!
    ds: String!
    start: String!
    end: String!
    total: String!
    groud: String!
    sort: String!
    item: [USDADataItem]
}
type USDADataItem {
    offset: Int!
    group: String!
    name: String!
    ndbno: String!
    ds: String!
    manu: String! 
}
# USDA Nutrition Search Types
type USDANutritionData {
    foods: [USDAFoodsData]
}
type USDAFoodsData{
    food: USDAFoodData
}
type USDAFoodData {
    sr: String!
    type: String!
    desc: USDAFoodDescription
    ing: USDAFoodIng
    nutrients: [USDANutientsData]
}
type USDAFoodDescription{
    ndbno: String!
    name: String!
    sd: String
    fg: String
    sn: String
    cn: String
    nf: String
    cf: String
    ff: String
    pf: String
    r: String
    rd: String
    ds: String!
    manu: String!
    ru: String!
}
type USDAFoodIng {
    desc: String!
    upd: String!
}
type USDANutientsData{
    nutrient_id: String!
    name: String!
    derivation: String!
    group: String!
    unit: String!
    value: String!
    se: String!
    dp: String!
    sourcecode: String!
    measures: [USDANutientsMeasuresData]
}
type USDANutientsMeasuresData{
    label: String!
    eqv: String!
    eunit: String!
    qty: String!
    value: String!
}
type Query {
    getUsers: [UserType],
    getUser(user_id: ID!): UserType,
    getUSDAData(text: String!, offset: Int!): USDAData,
    getUSDANutritionData(ndbno: String!): USDANutritionData
}
#Inputs and Mutations
input USDAFoodInput {
    ndbno: String!
    name: String!
    sd: String
    fg: String
    sn: String
    cn: String
    nf: String
    cf: String
    ff: String
    pf: String
    r: String
    rd: String
    ds: String!
    manu: String!
    ru: String!
}

type Mutation {
    setUSDAFood(food: USDAFoodInput!): USDAFoodDescription
    #setUSDAFood(ndbno: String!): USDAFoodDescription
}
scalar Date